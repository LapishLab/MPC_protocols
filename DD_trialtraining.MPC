\DD_trialtraining
\editted 9/28/23 by KGB
\Copied from DD_SHAPING4
\included the screen outputs in their own solid state
\instead of in every line of code
\and removed the tone


\Inputs
^Lresp = 1
^Rresp = 3

\Outputs
^Hlight = 7
^Sync = 10
^Pellet = 3
^Llever = 1
^Rlever = 2
^Llight = 4
^Rlight = 5

\Variables
\A (initial lever response)
\B (left response count during choice lever)
\E (initial lever latency)
\F (choice lever latency)
\H (type of trial (1=noinit, 2=nochoice, 3=leftchoice, 4=rightchoice))
\I (inter-trial interval)
\J (right response count during choice lever)
\K (trial counter)
\M (missed choice (no response))
\N (time at end of trial)
\Q (session condition (1=init, 2=choice, 3=leftchoice, 4=rightchoice))
\R (reinforcer count)
\S (elements of arrays E,F,U,V)
\T (timer & initial/choice latencies)
\U (left response during initial lever)
\V (left response during choice lever)
\X (right response during initial lever)
\Y (right response during choice lever)

\Z-Pulses
\Z1 (restart)
\Z2 (move to choice lever)

DIM A = 3599    \(filled with initial lever responses (0=none, 1=left, 2=right))
DIM B = 3599    \(filled with choice left response counts)
DIM E = 3599    \(filled with initial lever latencies)
DIM F = 3599    \(filled with choice lever latencies)
DIM H = 3599    \(filled with type of trial)
DIM J = 3599    \(filled with choice right response counts)
DIM N = 3599    \(filled with trial ending times)
DIM R = 1       \(0=left, 1=right)
DIM S = 3       \(array element counter 0=U, 1=V, 2=X, 3=Y)
DIM T = 6       \(0=timer, 1-3=initial(out/resp/latency), 4-6=choice(out/resp/latency))
DIM U = 3599    \(filled with initial left responses)
DIM V = 3599    \(filled with choice left responses)
DIM X = 3599    \(filled with initial right responses)
DIM Y = 3599    \(filled with choice right responses)
DISKCOLUMNS = 1

s.s.1,    \1" timer
s1,
.1": SET T(0)=T(0)+.1 ---> s1

s.s.2,    \Initialize & set variables
s1,
#START: SET I=0; SET K=1; Z1 ---> s2
s2,
35': ADD K ---> s3
s3,
.01": SET H(K)=-987.987, N(K)=-987.987, B(K)=-987.987, J(K)=-987.987, A(K)=-987.987, E(K)=-987.987, F(K)=-987.987 ---> STOPABORTFLUSH

s.s.3,    \Initial lever
s1,
#Z1: OFF^Hlight, ^Sync, ^Llight, ^Rlight, ^Llever, ^Rlever; SET E(K)=0, F(K)=0, Q=1 ---> s2
s2,
.01": ON^Hlight, ^Sync ---> s3
s3,
10": ON^Llever, ^Rlever; SET T(1)=T(0) ---> s4
s4,
#R^Lresp: OFF^Hlight, ^Llever, ^Rlever; SET T(2)=T(0), A(K)=1, T(3)=T(2)-T(1), E(K)=T(3); Z2 ---> s1
#R^Rresp: OFF^Hlight, ^Llever, ^Rlever; SET T(2)=T(0), A(K)=2, T(3)=T(2)-T(1), E(K)=T(3); Z2 ---> s1
10": SET H(K)=Q, N(K)=T(0), A(K)=0, E(K)=10; ADD K; Z1 ---> s1

s.s.4,    \Choice lever
s1,
#Z2: SET M=24-T(3), M=M" ---> s2
s2,
1": ON^Llight, ^Rlight, ^Llever, ^Rlever; SET T(4)=T(0), Q=2 ---> s3
s3,
#R^Lresp: OFF^Rlight; ON^Pellet; SET T(5)=T(0), T(6)=T(5)-T(4), F(K)=T(6), Q=3; ADD R(0) ---> s4
#R^Rresp: OFF^Llight; ON^Pellet; SET T(5)=T(0), T(6)=T(5)-T(4), F(K)=T(6), Q=4; ADD R(1) ---> s4
M#T: SET H(K)=Q, N(K)=T(0), F(K)=M/100; ADD K; Z1 ---> s1
s4,
.01": OFF^Pellet; SET I=(24-(T(3)+T(6))), I=I" ---> s5
s5,
.1": IF (R(0)+R(1))=30 [@Yes,@No]
        @Yes: SET H(K)=Q, N(K)=T(0); ADD K ---> s6
        @No: ---> s7
s6,
.01": SET H(K)=-987.987, N(K)=-987.987, B(K)=-987.987, J(K)=-987.987, A(K)=-987.987, E(K)=-987.987, F(K)=-987.987 ---> STOPABORTFLUSH
s7,
I#T: SET H(K)=Q, N(K)=T(0); ADD K; Z1 ---> s1

s.s.5,    \For Lresp - determine conditions (initial, choice) and record time & response counts
s1,
#R^Lresp: IF Q=1 [@Yes,@No]
    @Yes: SET U(S(0))=T(0); ADD S(0) ---> s2
    @No: IF (Q>=2) AND (Q<=4) [@Yes,@No]
        @Yes: SET V(S(1))=T(0); ADD S(1), B(K) ---> s2
        @No: ---> s2
s2,
.01": SET U(S(0))=-987.987, V(S(1))=-987.987 ---> s1

s.s.6,    \For Rresp - determine conditions (initial, choice) and record time & response counts
s1,
#R^Rresp: IF Q=1 [@Yes,@No]
    @Yes: SET X(S(2))=T(0); ADD S(2) ---> s2
    @No: IF (Q>=2) AND (Q<=4) [@Yes,@No]
        @Yes: SET Y(S(3))=T(0); ADD S(3), J(K) ---> s2
        @No: ---> s2
s2,
.01": SET X(S(2))=-987.987, Y(S(3))=-987.987 ---> s1

s.s.7,
s1,
   #START: ---> s2
s2,
1":SHOW 1,Trial,K, 2,TotalReinf,(R(0)+R(1)), 3,LReinf,R(0), 4,RReinf,R(1) ---> s2
